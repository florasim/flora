[General]
network = LoRaNetworkTest
**.vector-recording = false

**.numberOfGateways = 1
**.loRaGW[0].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"

**.loRaGW[1].numUdpApps = 1
**.loRaGW[1].packetForwarder.localPort = 2000
**.loRaGW[1].packetForwarder.destPort = 1000
**.loRaGW[1].packetForwarder.destAddresses = "networkServer"

**.networkServer.numUdpApps = 1
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${adrMethod="avg","max"}

**.numberOfNodes = ${numberOfNodes=100..701 step 100}
**.numberOfPacketsToSend = 0 #${numberOfPackets = 200..5000 step 200} #100 #obviously 0 means infinite number of packets
warmup-period = 2d
sim-time-limit = 12d
simtime-resolution = -11

**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(1000s)
**.alohaChannelModel = false

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**initialLoRaSF = intuniform(7, 12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**initialLoRaTP = (2dBm + 3dBm*intuniform(0, 4))  #2dBm + (3*intuniform(0, 4))dBm #14dBm #25mW #uniform(1mW, 25mW)#8.118864315mW
**.loRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time

#gateway features
**.loRaGW[*].**.initFromDisplayString = false

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.minInterferenceTime = 0s
**.displayAddresses = false

[Config LoRaSim-NoADR]
repeat = 15
**.networkServer.**.evaluateADRinServer = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.sigma = ${sigma=0, 1.785, 3.57}
**.constraintAreaMaxX = ${networkSize=480m}
**.constraintAreaMaxY = ${networkSize}
**.loRaGW[0].**.initialX = ${networkSize}/2
**.loRaGW[0].**.initialY = ${networkSize}/2
**.loRaNodes[*].**.initialX = uniform(0m, ${networkSize})
**.loRaNodes[*].**.initialY = uniform(0m, ${networkSize})

[Config Oulu-NoADR]
repeat = 15
**.networkServer.**.evaluateADRinServer = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.LoRaMedium.pathLossType = "LoRaPathLossOulu"
**.sigma = ${sigma=0, 3.9, 7.8}
**.constraintAreaMaxX = ${networkSize=9800m}
**.constraintAreaMaxY = ${networkSize}
**.loRaGW[0].**.initialX = ${networkSize}/2
**.loRaGW[0].**.initialY = ${networkSize}/2
**.loRaNodes[*].**.initialX = uniform(0m, ${networkSize})
**.loRaNodes[*].**.initialY = uniform(0m, ${networkSize})

[Config LoRaSim-ADR]
repeat = 30
**.networkServer.**.evaluateADRinServer = true
**.loRaNodes[*].**.evaluateADRinNode = true
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.sigma = ${sigma=0, 1.785, 3.57}
**.constraintAreaMaxX = ${networkSize=480m}
**.constraintAreaMaxY = ${networkSize}
**.loRaGW[0].**.initialX = ${networkSize}/2
**.loRaGW[0].**.initialY = ${networkSize}/2
**.loRaNodes[*].**.initialX = uniform(0m, ${networkSize})
**.loRaNodes[*].**.initialY = uniform(0m, ${networkSize})

[Config Oulu-ADR]
repeat = 30
**.networkServer.**.evaluateADRinServer = true
**.loRaNodes[*].**.evaluateADRinNode = true
**.LoRaMedium.pathLossType = "LoRaPathLossOulu"
**.sigma = ${sigma=0, 3.9, 7.8}
**.constraintAreaMaxX = ${networkSize=9800m}
**.constraintAreaMaxY = ${networkSize}
**.loRaGW[0].**.initialX = ${networkSize}/2
**.loRaGW[0].**.initialY = ${networkSize}/2
**.loRaNodes[*].**.initialX = uniform(0m, ${networkSize})
**.loRaNodes[*].**.initialY = uniform(0m, ${networkSize})
